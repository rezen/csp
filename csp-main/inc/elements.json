
[
    {
        "id": "eval-1",
        "label": "Inline eval",
        "html": "<p id=\"{{ id }}\">Original before {{ id }}<\/p>",
        "script": {
            "nonce": false,
            "inline": [
                "var text = '[!] Changed with eval in {{ id }}';",
                "  eval(\"document.getElementById('{{ id }}').textContent='\" + text + \"'\");"
            ]
        },
        "csp": {
            "block": {
                "script-src": "'unsafe-eval' 'nonce-{{ nonce }}'"
            }
        },
        "category": "script-src",
        "validate": {
            "allow": "document.getElementById('{{ id }}').textContent.indexOf(`Changed with eval`) >= 0"
        }
    },
    {
        "id": "eval-2",
        "label": "Eval from external",
        "html": "<p id=\"{{ id }}\">Original before {{ id }}<\/p>",
        "script": {
            "domready": [
                "new Function(`document.getElementById('eval-2').textContent='[!] Changed from external using new Function()'`)();"
            ],
            "src": "assets\/generated.js",
            "nonce": false
        },
        "csp": {
            "block": {
                "script-src": "'unsafe-eval' 'nonce-{{ nonce }}'"
            }
        },
        "category": "script-src",
        "validate": {
            "allow": "document.getElementById('{{ id }}').textContent.indexOf(`Changed from external`) >= 0"
        }
    },
    {
        "id": "eval-nonce",
        "label": "Eval from with nonce",
        "html": "<p id=\"{{ id }}\">Original before {{ id }}<\/p>",
        "script": {
            "src": "assets\/generated.js",
            "nonce": true,
            "inline": "eval(\"document.getElementById('{{ id }}').textContent='[!] Changed with eval with nonce'\");"
        },
        "csp":{
            "block": {
                "script-src": "'unsafe-eval'  'nonce-{{ nonce }}'"
            }
        },
        "category": "script-src",
        "validate": {
            "allow": "document.getElementById('{{ id }}').textContent.indexOf(`Changed with eval with nonce`) >= 0"
        }
    },
    {
        "id": "style-attr",
        "label": "Element with style attribute",
        "html": [
            "<p id='style-attr' style=\"color:rgb(140, 20, 252)\">",
            "  Style in element will make it purple",
            "<\/p>"
        ],
        "csp": {},
        "category": "style-src",
        "validate": {
            "allow": "window.getComputedStyle(document.getElementById(`style-attr`)).getPropertyValue(`color`) === 'rgb(140, 20, 252)';"
        }

    },
    {
        "id": "style-inline-nonce",
        "label": "Style with nonce",
        "html": [
            "<p id='{{ id }}'>Style makes this blue<\/p>",
            "<style nonce=\"{{ nonce }}\">",
            " #{{ id }}{color: rgb(0, 0, 255);}",
            " #{{ id }}:before{content: 'Changed ';}",
            "<\/style>"
        ],
        "category": "style-src",
        "validate": {
            "allow": "window.getComputedStyle(document.getElementById(`style-inline-nonce`)).getPropertyValue(`color`) === 'rgb(0, 0, 255)';"
        }
    },
    {
        "id": "style-inline-wo-nonce",
        "label": "Style without nonce",
        "html": [
            "<p id='{{ id }}'>Style will make this red<\/p>",
            "<style>",
            " #{{ id }}{color: rgb(0, 0, 255);}",
            " #{{ id }}:before{content: 'Changed ';}",
            "<\/style>"
        ],
        "category": "style-src",
        "validate": {
            "allow": "window.getComputedStyle(document.getElementById(`{{ id }}`)).getPropertyValue(`color`) === 'rgb(0, 0, 255)';"
        }
    },
    {
        "vars": {
            "color": "rgb(17, 167, 167)"
        },
        "id": "style-self-external",
        "label": "Style from stylesheet",
        "html": [
            "<p id='{{ id }}'>Style will make this aqua<\/p>"
        ],
        "css": [
            "#style-self-external {color: {{ color }};}",
            "#style-self-external:before {content: \"Changed \";}"
        ],
        "validate": {
            "allow": "window.getComputedStyle(document.getElementById(`{{ id }}`)).getPropertyValue(`color`) === 'rgb(17, 167, 167)';"
        },
        "category": "style-src"
    },
    {
        "id": "style-self-external-2",
        "label": "Style from stylesheet",
        "html": [
            "<p id='{{ id }}'>Secrets?<\/p>",
            "<input type='PassWord' name='password' value='love4ever' \/>"
        ],
        
        "css": [],
        "category": "style-src",
        "validate": {
            "allow": "window.getComputedStyle(document.getElementById('style-self-external-2')).getPropertyValue('font-family').indexOf('attack') >= 0"
        }
    },
    {
        "id": "inline-js-1",
        "label": "Inline js without nonce",
        "html": [
            "<p id=\"{{ id }}\">",
            "  Inline JavaScript w\/o nonce will change this color to green",
            "<\/p>"
        ],
        "script": {
            "nonce": false,
            "inline": "document.getElementById(\"{{ id }}\").style.color=\"rgb(0, 128, 0)\";"
        },
        "category": "style-src",
        "validate": {
            "allow": "window.getComputedStyle(document.getElementById(`{{ id }}`)).getPropertyValue(`color`) === 'rgb(0, 128, 0)';"
        }
    },
    {
        "id": "inline-js-2",
        "label": "Inline js with nonce",
        "html": "<p id=\"{{ id }}\">Inline JavaScript w\/ nonce will change this color to orange<\/p>",
        "script": {
            "nonce": true,
            "inline": "document.getElementById(\"{{ id }}\").style.color=\"rgb(255, 165, 0)\";"
        },
        "category": "style-src",
        "validate": {
            "allow": "window.getComputedStyle(document.getElementById(`{{ id }}`)).getPropertyValue(`color`) === 'rgb(255, 165, 0)';"
        }
    },
    {
        "id": "external-style",
        "label": "Remote stylesheet",
        "html": [
            "<link rel=\"stylesheet\" href=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/font-awesome\/5.8.1\/css\/all.min.css\" \/>",
            "<i class=\"fas fa-align-justify\"><\/i>",
            "Font awesome icon, remote style"
        ],
        "validate": {
            "allow": "window.getComputedStyle(document.querySelector(`[data-id='external-style'] i`)).getPropertyValue(`font-family`).indexOf('Font Awesome') >= 0;"
        },
        "category": "style-src"
    },
    {
        "id": "fonts-1",
        "label": "Remote stylesheet & fonts",
        "html": [
            "<p class=\"google-font\">Should be a fancy font if google fonts loaded<\/p>"
        ],
        "css": [
            ".google-font{font-family: 'Alfa Slab One';}"
        ],
        "validate": {
            "allow": "Array.from(document.fonts.keys()).some(f => f.family.indexOf('Alfa Slab') >= 0)"
        },
        "category": "style-src font-src"
    },
    {
        "id": "fonts-2",
        "label": "Remote stylesheet & fonts",
        "html": [
            "<p class=\"google-font-too\">",
            " Should be fancy font if @import works in css for google fonts",
            "<\/p>"
        ],
        "category": "style-src font-src",
        "validate": {
            "allow": "Array.from(document.fonts.keys()).some(f => f.family.indexOf('Monoton') >= 0)"
        }

    },
    {
        "id": "iframe-remote-youtube-2",
        "label": "Youtube embed with script",
        "html": [
            "<div data-youtube id='{{ id }}'></div>",
            "<script nonce='{{ nonce }}' src='https://www.youtube.com/iframe_api'></script>"
        ],
        "category": "script-src child-src",
        "script": {
            "global": [
                "window.onYouTubeIframeAPIReady = function() {",
                "    Array.from(document.querySelectorAll('[data-youtube]')).map(function(el) {", 
                "        var id = el.getAttribute('id');", 
                "        new YT.Player(id, {", 
                "            height: '225',", 
                "            width: '400',", 
                "            videoId: 's4wrMMju-Xc'", 
                "        });", 
                "    })", 
                "}"
            ]
        },
        "validate": {
            "allow": "document.querySelector('#iframe-remote-youtube-2').tagName === 'IFRAME' && !!messages['https://www.youtube.com']"
        }
    },

    {
        "id": "iframe-remote-youtube",
        "label": "Youtube embed (origin)",
        "html": [
            "<iframe id='{{ id }}' width='400' height='225' src='https:\/\/www.youtube.com\/embed\/s4wrMMju-Xc?enablejsapi=1&debugjs=1&debugcss=1' ",
            "frameborder='0' allow='accelerometer;autoplay;encrypted-media;gyroscope;picture-in-picture' allowfullscreen><\/iframe>"
        ],
        "category": "child-src object-src",
        "validate": {
            "allow": "document.getElementById('{{ id }}').hasAttribute('data-loaded')"
        }
    },
    {
        "id": "iframe-remote-vimeo",
        "label": "Vimeo embed",
        "html": [
            "<iframe src='https:\/\/player.vimeo.com\/video\/1084537' width='400' height='225' frameborder='0' webkitallowfullscreen mozallowfullscreen allowfullscreen><\/iframe>"
        ],
        "category": "child-src object-src",
        "validate": {
            "allow": "!!messages['https://player.vimeo.com']"
        }
    },
    {
        "id": "iframe-local",
        "label": "Local iframe with xss",
        "html": [
            "<iframe border='0' src='xss.php' width='400' height='225'><\/iframe>",
            "<p id='{{ id }}'>Will change if xss triggers<\/p>"
        ],
        "category": "child-src object-src",
        "validate": {
            "allow": "!!window.iframeXss"
        }
    },
    {
        "id": "video-src-local",
        "label": "Local video",
        "html": [
            "<video width=\"400\" src=\"assets\/video-1.mp4\" controls \/>"
        ],
        "category": "media-src",
        "validate": {
            "allow": "document.querySelector(`[data-id='video-src-local'] video`).hasAttribute('data-loaded')"
        }
    },
    {
        "id": "video-src-remote",
        "label": "remote video",
        "html": [
            "<video width=\"400\" src=\"http://sneaker:8100/assets\/video-1.mp4\" controls \/>"
        ],
        "category": "media-src",
        "validate": {
            "allow": "document.querySelector(`[data-id='video-src-remote'] video`).hasAttribute('data-loaded')"
        }
    },
    {
        "id": "img-src-remote",
        "label": "Remote image",
        "html": [
            "<img src=\"https:\/\/img.shields.io\/badge\/build-passing-brightgreen.svg\" alt=\"From another domain\" \/>"
        ],
        "category": "img-src",
        "validate": {
            "allow": "document.querySelector(`[data-id='{{ id }}'] img`).hasAttribute('data-loaded')"
        }
    },
    {
        "id": "img-src-local-1",
        "label": "Local image",
        "html": "<img src='assets\/pic-1.jpg' height='200' alt='Same source' \/>",
        "category": "img-src",
        "validate": {
            "allow": "document.querySelector(`[data-id='{{ id }}'] img`).hasAttribute('data-loaded')"
        }
    },
    {
        "id": "img-src-local-2",
        "label": "Local image",
        "html": "<img nonce='{{ nonce }}' src='assets\/pic-1.jpg' height='200' alt='Same source' \/>",
        "category": "img-src",
        "validate": {
            "allow": "document.querySelector(`[data-id='{{ id }}'] img`).hasAttribute('data-loaded')"
        }
    },
    {
        "id": "img-src-data",
        "label": "image dataurl",
        "html": "<img alt='Data url' src='data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAgAAZABkAAD\/2wBDAAEBAQEBAQEBAQECAQEBAgICAQECAgMCAgICAgMEAwMDAwMDBAQEBAUEBAQGBgYGBgYICAgICAkJCQkJCQkJCQn\/2wBDAQICAgMDAwUEBAUIBgUGCAkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQn\/wAARCAAwADADAREAAhEBAxEB\/8QAGQABAQEBAQEAAAAAAAAAAAAAAAgKCQUH\/8QAKxAAAAQFAwMDBQEAAAAAAAAAAgMEBQABBgcICRESExQWFRciGSRak9YK\/8QAFAEBAAAAAAAAAAAAAAAAAAAAAP\/EABQRAQAAAAAAAAAAAAAAAAAAAAD\/2gAMAwEAAhEDEQA\/ANhEAgEAgEAgEBOV3sw8R8fKlQ0ZfvKW3NkKwc0JTo20pV9bs1NOShtONNILVlJXFUSaMkZpJgAmSDxmIApSnuGewfVbb3OtteSi2a5FobhMd1bd1H3Hj1e027JXxlX9meYlP7dciMNIN6R5Qyx8RT4jCIM9pynKA9yp6npqiaaqGs6zqFDSNH0ihVulV1W6KykDa2NqAoR6pWrVHiAUSSSUAQzDBikEIZTnOcpSgJytvnVhHeStGa29ocxrV3VuJUfcePUFTdwmF8el\/ZkGKj+3Qolhp5vSIKGYPiGfEARCntKU5wFUwCAxZ\/6NdJfUEzxzctbd7FGwHurbunLVslNvNQ+VU2x9F6Rvz4tOT9B4ckZ4uJCwkXMIJgny2kKc5ClIO\/WifjfejEbTHxnx6yFoz2+vBb7zPy+kPUULt2nq1Vuzkl+6bT1KUzqJVJY\/gYLbltPYUpykFU51W3rS8mEeY1obbs3kdxLq2ruFTdBU93BCPv3p8YViJCn66owogrqnmhDzMGEAd9xClKU5wGLPRP0T9TjEbU4xnyFyFxn9vrP2+8z8vq\/zOlHbtPVqUdm1L9q2uylUZ1FSksHwLFty3nsGU5yDfrAIBAIBAIBAIDizqN6YmXGad7qWulYTVYuNgxR7BSqFgcrS0gU8jbXFySr1ysx3Nm3VG0FdY4pUWSLckQuJIdxzlsEIQF9AjUm\/Invh+iqf7iAfQI1JvyJ74foqn+4gKpwn0hc3MXsnLZ30u9rO3Uywt3Q3rPkNgKkKfgsr\/wCptKtvI7ia2qnIj7U9QBSDkmH8yw7cZ7CCHfqAQCAQCAQCA\/\/Z' \/>",
        "category": "img-src",
        "validate": {
            "allow": "document.querySelector(`[data-id='{{ id }}'] img`).hasAttribute('data-loaded')"
        }
    },
    {
        "id": "img-src-blob",
        "label": "image blob",
        "html": "<img id='{{ id }}' alt='blob url' src='blob:http:\/\/site.example.com\/1b7b9af0-127b-43bc-95d9-800df9c08df0' \/>",
        "category": "img-src",
        "validate": {
            "allow": "document.querySelector(`[data-id='{{ id }}'] img`).hasAttribute('data-loaded')"
        }
    },
    {
        "id": "form-local-1",
        "label": "Local form 1",
        "html": [
            "<form>",
            "  <input type=\"text\" name=\"q\" placeholder=\"Search ...\" \/>",
            "  <button type=\"submit\">Search<\/button>",
            "<\/form>"
        ],
        "category": "form-action"
    },
    {
        "id": "form-local-2",
        "label": "Local form 2",
        "html": [
            "<form nonce=\"{{ nonce }}\">",
            "  <input type=\"text\" name=\"q\" placeholder=\"Search ...\" \/>",
            "  <button type=\"submit\">Search<\/button>",
            "<\/form>"
        ],
        "category": "form-action"
    },
    {
        "id": "form-remote-1",
        "label": "Remote form 1",
        "html": [
            "<form action=\"https:\/\/www.google.com\/search\">",
            "  <input type=\"text\" name=\"q\" placeholder=\"Search ...\" \/>",
            "  <button type=\"submit\">Search<\/button>",
            "<\/form>"
        ],
        "category": "form-action"
    },
    {
        "id": "form-remote-2",
        "label": "Remote form 2",
        "html": [
            "<form nonce=\"{{ nonce }}\" action=\"https:\/\/www.google.com\/search\">",
            "  <input type=\"text\" name=\"q\" placeholder=\"Search ...\" \/>",
            "  <button type=\"submit\">Search<\/button>",
            "<\/form>"
        ],
        "category": "form-action"
    },
    {
        "id": "ajax-local",
        "label": "Local AJAX call",
        "html": "<p id='{{ id }}'>Will change once AJAX is done<\/p>",
        "category": "connect-src",
        "script": {
            "domready": [
                "fetch('ajax.php')",
                "    .then(function(response) {",
                "        return response.json();",
                "    })",
                "    .then(function(d) {",
                "        var el = document.querySelector('#ajax-local');",
                "        el.textContent = d.msg;",
                "    })",
                "    .catch(function(err) {",
                "        var el = document.querySelector('#ajax-local');",
                "        if (!el) {return;}",
                "        el.textContent = err;",
                "    });"
            ],
            "src": "assets\/generated.js"
        },
        "validate": {
            "allow": "document.getElementById('{{ id }}').textContent.indexOf('Changed message from AJAX') >= 0"
        }
    },
    {
        "id": "stripe-button",
        "label": "Remote AJAX call to stripe",
        "html": [
            "<script src=\"https:\/\/checkout.stripe.com\/checkout.js\"><\/script>",
            "<button id=\"{{ id }}\">Stripe<\/button>"
        ],
        "category": "child-src script-src",
        "script": {
            "domready": [
                "var handler = StripeCheckout.configure({",
                "    key: 'pk_KBCS2K6UgQc8K9VZCtNMOK4AEl5aU'",
                "    // Ignore me",
                "});",
                "var btn = document.getElementById('stripe-button');",
                "btn.addEventListener('click', function(e) {",
                "    var x = handler.open({",
                "      name: 'Demo Site',",
                "      description: '2 widgets',",
                "      amount: 10,",
                "      opened: function() { btn.classList.add('opened'); },",
                "    });",
                "    e.preventDefault();",
                "});",
                "", 
                "window.addEventListener('popstate', function() {",
                "    handler.close();",
                "});",
                "",
                "btn.click();",
                "setTimeout(function() {",
                "  var el = document.querySelector('[name=stripe_checkout_app]');",
                "  if (!el) {return;}",            
                "  el.style.display='none';",
                "}, 1000);",
                ""
            ],
            "src": "assets\/generated.js"
        },
        "validate": {
            "allow": "document.querySelectorAll('#stripe-button.opened').length > 0"
        }
    },
    {
        "id": "js-widget-twitter",
        "label": "Twitter widget",
        "html": [
            "<a href=\"https:\/\/twitter.com\/dandr3ss?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-count=\"false\">",
            "Follow @dandr3ss",
            "<\/a>",
            "<script async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"><\/script>"
        ],
        "category": "script-src child-src",
        "validate": {
            "allow": "document.querySelectorAll('#twitter-widget-0').length > 0"
        }
    },
    {
        "id": "media-audio",
        "label": "Local audio",
        "html": [
            "<audio src='assets\/eddy_-_01_-_Pure_Adrenaline.mp3' controls \/>",
            "<a href='http:\/\/freemusicarchive.org\/music\/eddy\/2_Damn_Loud\/Pure_Adrenaline_mastered-with-CloudBounce'>Source<\/a>"
        ],
        "category": "media-src",
        "validate": {
            "allow": "document.querySelector(`[data-id='{{ id }}'] audio`).hasAttribute('data-loaded')"
        }
    },
    {
        "id": "embed-pdf",
        "label": "Local embed",
        "html": [
            "<embed src=\"assets\/smashing-the-stack.pdf\" type=\"application\/pdf\" width=\"400\" height=\"225\">",
            "<\/embed>"
        ],
        "category": "plugin-types object-src",
        "validate": {
            "allow": "document.querySelector(`[data-id='{{ id }}'] embed`).hasAttribute('internalinstanceid') || document.querySelector(`[data-id='{{ id }}'] embed`).hasAttribute('data-loaded')"
        }
    },
    {
        "id": "embed-svg",
        "label": "Local embed svg",
        "html": [
            "<embed src=\"assets\/jquery.svg\" type=\"image\/svg+xml\" width=\"400\" height=\"225\">",
            "<\/embed>"
        ],
        "category": "plugin-types object-src",
        "validate": {
            "allow": "!!document.querySelector(`[data-id='{{ id }}'] embed`).getSVGDocument()",
            "_allow": "document.querySelector(`[data-id='{{ id }}'] embed`).hasAttribute('data-loaded')"
        }
    },

    {
        "id": "script-src-cloudflare",
        "label": "Load jquery from cloudflare",
        "html": [
            "<p id=\"{{ id }}\">This changes if cloudflare jquery loads<\/p>",
            "<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery\/3.3.1\/jquery.min.js\"><\/script>"
        ],
        "script": {
            "domready": [
                "jQuery(`#script-src-cloudflare`)\n  .text(`Changed using jquery from cloudflare cdn`)"
            ],
            "src": "assets\/generated.js"
        },
        "category": "script-src",
        "validate": {
            "allow": "document.getElementById('{{ id }}').textContent.indexOf(`Changed using jquery`) >= 0"
        }
    },
    {
        "id": "script-src-jsdelivr",
        "label": "Script from jsdelivr",
        "html": [
            "<p id=\"{{ id }}\">This changes if jsdelivr d3 loads<\/p>",
            "<script src=\"https:\/\/cdn.jsdelivr.net\/npm\/d3@5.9.2\/dist\/d3.min.js\"><\/script>"
        ],
        "script": {
            "domready": [
                "d3.select(`#script-src-jsdelivr`)\n  .text(`Changed using d3 from jsdelivr`);"
            ],
            "src": "assets\/generated.js"
        },
        "category": "script-src",
        "validate": {
            "allow": "document.getElementById('script-src-jsdelivr').textContent.indexOf(`Changed using d3`) >= 0"
        }
    },
    {
        "id": "target-blank",
        "label": "Target blank",
        "html": "<a id=\"{{ id }}\" href=\"tabnab.html\" target=\"_blank\">Tabby<\/p>",
        "category": "sandbox"
    },
    {
        "id": "target-blank-ebay",
        "label": "Target for another domain",
        "html": "<a id=\"{{ id }}\" href=\"https://www.ebay.com\" target=\"_blank\">Ebay.com<\/p>",
        "category": "sandbox"
    },
    {
        "id": "worker-1",
        "label": "A local webworker",
        "html": "<p id='{{ id }}'>Waiting for worker ...</p>",
        "category": "child-src worker-src",
        "script": {
            "global": [
                "(function(){",
                "  if (!window.Worker) { return;}",
                "  const worker = new Worker('/assets/worker.js');",
                "  worker.onerror = function(e) {};",
                "  worker.onmessage = function(e) {",
                "    var el = document.getElementById('worker-1');",    
                "    el.textContent = 'Result from worker - ' + e.data;",
                "  };",
                "  setTimeout(() => worker.postMessage([2, 2]), 1000);",
                "})();"
            ]
        },
        "validate": {
            "allow": "document.getElementById('{{ id }}').textContent.indexOf(`Result from worker - 4`) >= 0"
        }
    }
]